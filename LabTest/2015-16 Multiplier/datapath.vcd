$date
	Sun Nov 10 14:36:04 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_INTG $end
$var wire 13 ! Y [12:0] $end
$var reg 4 " X [3:0] $end
$var reg 1 # clk $end
$var reg 1 $ reset $end
$scope module int $end
$var wire 4 % X [3:0] $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 9 & out [8:0] $end
$var wire 13 ' Y [12:0] $end
$var wire 1 ( Acc_rst2 $end
$var wire 1 ) Acc_rst1 $end
$scope module ar $end
$var wire 13 * Y [12:0] $end
$var wire 1 # clk $end
$var wire 9 + out [8:0] $end
$var wire 1 ( Acc_rst2 $end
$var wire 1 ) Acc_rst1 $end
$var reg 13 , acc [12:0] $end
$upscope $end
$scope module mx $end
$var wire 4 - X [3:0] $end
$var wire 9 . out [8:0] $end
$upscope $end
$scope module rst $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 4 / qbar [3:0] $end
$var wire 4 0 q [3:0] $end
$var wire 1 ( Acc_rst2 $end
$var wire 1 ) Acc_rst1 $end
$scope module DFF1 $end
$var wire 1 # clk $end
$var wire 1 1 d $end
$var wire 1 2 qbar $end
$var wire 1 $ reset $end
$var reg 1 3 q $end
$upscope $end
$scope module DFF2 $end
$var wire 1 4 clk $end
$var wire 1 5 d $end
$var wire 1 6 qbar $end
$var wire 1 $ reset $end
$var reg 1 7 q $end
$upscope $end
$scope module DFF3 $end
$var wire 1 8 clk $end
$var wire 1 9 d $end
$var wire 1 : qbar $end
$var wire 1 $ reset $end
$var reg 1 ; q $end
$upscope $end
$scope module DFF4 $end
$var wire 1 < clk $end
$var wire 1 = d $end
$var wire 1 > qbar $end
$var wire 1 $ reset $end
$var reg 1 ? q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0?
1>
1=
0<
0;
1:
19
08
07
16
15
04
03
12
11
b0 0
b1111 /
b0 .
b0 -
b0 ,
b0 +
b0 *
0)
0(
b0 '
b0 &
b0 %
1$
0#
b0 "
b0 !
$end
#8
1#
#16
01
15
19
1=
02
14
16
08
1:
0<
0)
b1110 /
1>
0(
13
07
0;
b1 0
0?
0#
0$
#24
11
b1111 /
12
04
b0 0
03
1#
b11111010 &
b11111010 +
b11111010 .
b1010 "
b1010 %
b1010 -
#32
0#
#40
0=
0>
1(
1?
09
0:
1<
1)
1;
05
06
18
17
01
b0 /
02
14
b1111 0
13
1#
b1111101 &
b1111101 +
b1111101 .
b101 "
b101 %
b101 -
#48
0#
#56
11
b1 /
12
04
b1110 0
03
b100101100 !
b100101100 '
b100101100 *
b100101100 ,
1#
b100101100 &
b100101100 +
b100101100 .
b1100 "
b1100 %
b1100 -
#64
0#
#72
15
16
08
07
01
b10 /
02
14
b1101 0
13
b101000101 !
b101000101 '
b101000101 *
b101000101 ,
1#
b11001 &
b11001 +
b11001 .
b1 "
b1 %
b1 -
#80
0#
#88
11
b11 /
12
04
b1100 0
03
b1010001010 !
b1010001010 '
b1010001010 *
b1010001010 ,
1#
b101000101 &
b101000101 +
b101000101 .
b1101 "
b1101 %
b1101 -
#96
0#
#104
19
1:
0<
0)
0;
05
06
18
17
01
b100 /
02
14
b1011 0
13
b1100111001 !
b1100111001 '
b1100111001 *
b1100111001 ,
1#
b10101111 &
b10101111 +
b10101111 .
b111 "
b111 %
b111 -
#112
0#
#120
11
b101 /
12
04
b1010 0
03
1#
b11100001 &
b11100001 +
b11100001 .
b1001 "
b1001 %
b1001 -
#128
0#
#136
15
16
08
07
01
b110 /
02
14
b1001 0
13
1#
b110010 &
b110010 +
b110010 .
b10 "
b10 %
b10 -
#144
0#
#152
11
b111 /
12
04
b1000 0
03
1#
b100010011 &
b100010011 +
b100010011 .
b1011 "
b1011 %
b1011 -
#160
0#
#168
1=
b0 !
b0 '
b0 *
b0 ,
1>
0(
0?
09
0:
1<
1)
1;
05
06
18
17
01
b1000 /
02
14
b111 0
13
1#
b1111101 &
b1111101 +
b1111101 .
b101 "
b101 %
b101 -
#176
0#
#184
11
b1001 /
12
04
b110 0
03
b1100100 !
b1100100 '
b1100100 *
b1100100 ,
1#
b1100100 &
b1100100 +
b1100100 .
b100 "
b100 %
b100 -
#192
0#
#200
15
16
08
07
01
b1010 /
02
14
b101 0
13
b10010110 !
b10010110 '
b10010110 *
b10010110 ,
1#
b110010 &
b110010 +
b110010 .
b10 "
b10 %
b10 -
#208
0#
#216
11
b1011 /
12
04
b100 0
03
b11001000 !
b11001000 '
b11001000 *
b11001000 ,
1#
#224
0#
#232
19
1:
0<
0)
0;
05
06
18
17
01
b1100 /
02
14
b11 0
13
b11111010 !
b11111010 '
b11111010 *
b11111010 ,
1#
#240
0#
#248
11
b1101 /
12
04
b10 0
03
1#
#256
0#
#264
15
16
08
07
01
b1110 /
02
14
b1 0
13
1#
#272
0#
#280
11
b1111 /
12
04
b0 0
03
1#
#288
0#
#296
0=
b0 !
b0 '
b0 *
b0 ,
0>
1(
1?
09
0:
1<
1)
1;
05
06
18
17
01
b0 /
02
14
b1111 0
13
1#
#304
0#
#312
11
b1 /
12
04
b1110 0
03
b110010 !
b110010 '
b110010 *
b110010 ,
1#
#320
0#
#328
15
16
08
07
01
b10 /
02
14
b1101 0
13
b1100100 !
b1100100 '
b1100100 *
b1100100 ,
1#
#336
0#
#344
11
b11 /
12
04
b1100 0
03
b10010110 !
b10010110 '
b10010110 *
b10010110 ,
1#
#352
0#
#360
19
1:
0<
0)
0;
05
06
18
17
01
b100 /
02
14
b1011 0
13
b11001000 !
b11001000 '
b11001000 *
b11001000 ,
1#
#368
0#
#376
11
b101 /
12
04
b1010 0
03
1#
#384
0#
#392
15
16
08
07
01
b110 /
02
14
b1001 0
13
1#
#400
0#
